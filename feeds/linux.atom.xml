<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michaelyin's Blog</title><link href="http://blog.michaelyin.info/" rel="alternate"></link><link href="http://blog.michaelyin.info/feeds/linux.atom.xml" rel="self"></link><id>http://blog.michaelyin.info/</id><updated>2011-02-12T07:49:00+08:00</updated><entry><title>Linux基础知识总结</title><link href="http://blog.michaelyin.info/2011/02/12/linux%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e6%80%bb%e7%bb%93/" rel="alternate"></link><updated>2011-02-12T07:49:00+08:00</updated><author><name>MichaelYin</name></author><id>tag:blog.michaelyin.info,2011-02-12:2011/02/12/linux%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e6%80%bb%e7%bb%93/</id><summary type="html">&lt;h2&gt;用户和角色&lt;/h2&gt;
&lt;p&gt;Linux中的用户和角色的概念和一般权限系统中的概念基本差不多，用户可以属于多个角色，从而根据所属的角色在系统中拥有不同的权限。这其中有一个用户拥有系统最大的权限，那就是root.&lt;/p&gt;
&lt;p&gt;Linux是一个多任务多用户的操作系统，其中的服务在运行的时候会获得一个PID，而这个PID也是有拥有者身份的，换句话说，是这个用户启动的这个服务，有上面我们可以知道，这些服务也就相应的具有这个用户所具有的一些权限，可以做这个用户被允许所作的一些事情，但是，如果这个PID被入侵的话，那么入侵者也就具有了相应PID的权限，如果这个PID的拥有者的权限太高的话，比如是root,那么入侵者就可以再Linux中为所欲为，所以，尽量的将服务的PID权限降低，这样的话可以保证即使服务被入侵也不会让入侵者得到较大的权限，使系统更加安全。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.michaelyin.info/images/2011/02/201102121549134038.png"&gt;&lt;img alt="201102121549134038" src="http://blog.michaelyin.info/images/2011/02/201102121549134038.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;查看用户可以打开/etc/passwd，查看角色信息可以查看/etc/group/不同Linux可能会有所不同，我所使用的是Ubuntu
10.10&lt;/p&gt;
&lt;h2&gt;文件属性和权限&lt;/h2&gt;
&lt;p&gt;在shell中输入ls -al可以查看当前目录下的所有文件&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.michaelyin.info/images/2011/02/201102121549193934.png"&gt;&lt;img alt="201102121549193934" src="http://blog.michaelyin.info/images/2011/02/201102121549193934.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文件的权限由10位的字符串构成，比如-rwxrwxrwx这样的字符串，由于权限粒度精确到了用户，所以一共有10位。第一位表示这个文件的属性，比如d代表directory,-则代表是一个文件，接下来的9位则是三个为一组，且都为rwx的组合，r代表可读，w代表可写,x代表可运行，第一组是文件拥有人的权限，第二组代表和文件拥有同样角色的用户的权限，第三组代表不属于同一个角色的用户的权限。&lt;/p&gt;
&lt;p&gt;比如一个文件权限为-rwxr-xr--，说明这个文件为一个目录，文件拥有者可读可写，可执行，同角色的使用者可读可执行，其他使用者仅可读。&lt;/p&gt;
&lt;p&gt;后面的两位一个表示的是文件的拥有者，一个表示的是文件所拥有的角色。看到这里我当时有点疑惑，如果一个用户有多个角色那么这里如何处理的呢？后来明白，原来用户有一个有效角色，这个每个用户是唯一的，然后这个用户新建的文件的角色就会以这个有效角色来填写。&lt;/p&gt;
&lt;h2&gt;文件目录&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://blog.michaelyin.info/images/2011/02/201102121549205197.jpg"&gt;&lt;img alt="201102121549205197" src="http://blog.michaelyin.info/images/2011/02/201102121549205197.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;/这个称为根目录，在安装的时候根目录是必须挂载在一个分区上的，home是系统用户的家目录，比如邮件什么的都放在这个里面，一般这个也是单独挂载在一个分区中的，/var/log中则是记录文件，排错的时候十分重要。这里也就简单过一下，具体目录的含义随着使用的增加慢慢积累。&lt;/p&gt;
&lt;h2&gt;目录与路径&lt;/h2&gt;
&lt;p&gt;绝对路径就是路径带着/,也就是从/一直这样找到文件，而相对路径则是相对于现在所处的目录来说的，web里面也有这个，所以就不多说了，在这里只说认为最主要的部分，具体的命令用的时候再查。&lt;/p&gt;
&lt;h2&gt;shell&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://blog.michaelyin.info/images/2011/02/201102121549226984.jpg"&gt;&lt;img alt="201102121549226984" src="http://blog.michaelyin.info/images/2011/02/201102121549226984.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;理解shell是个什么东东还是比较重要的，shell其实就是提供的一个工具让我们通过它来控制系统内核(kernel)做一些工作。其实和DOS中的command有相似。shell也有很多种，一般说的都是bash
shell.&lt;/p&gt;
&lt;p&gt;shell命令很多，这里只记载几个我认为很关键的命令。在输入命令的时候双击tab可以使用命令补全功能，如果不知道某个命令的用法，敲man
命令 就可以查看该命令的说明，不会你就找“男人”，嘿嘿。&lt;/p&gt;
&lt;h2&gt;vi的使用&lt;/h2&gt;
&lt;p&gt;Linux下的工具很多，这里就只总结一个吧，那就是vi,因为vi之于Linux就如同notepad之于windows，而且我个人认为vi其实更加强大。&lt;/p&gt;
&lt;p&gt;Linux下面一共有三种模式，第一种是一般模式，在这种模式下面可以进行移动光标，删除整行，复制，粘贴等，需要加一句是，当时我移动光标用的是键盘上的上下键，后来在网上看到原来hjkl这几个也可以用来移动光标，这样就可以快速操作了。&lt;/p&gt;
&lt;p&gt;在一般模式下按i
r可以进入到编辑模式，编辑模式下面就可以惊醒文本的输入了。按下esc返回到一般模式&lt;/p&gt;
&lt;p&gt;在一般模式下按:或者/是进入命令模式，可以进行搜索，存盘，退出等操作。&lt;/p&gt;
&lt;p&gt;vi 的使用只要知道了这三种模式，具体的命令使用的时候再查一般问题不大。&lt;/p&gt;</summary><category term="Linux"></category></entry></feed>